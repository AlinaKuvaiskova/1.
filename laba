import javax.swing.*;
import javax.swing.table.AbstractTableModel;
import java.awt.*;
import java.awt.event.ActionEvent; import java.awt.event.ActionListener;
import java.util.ArrayList; import java.util.HashMap;
import java.util.Map;
public class Main {
public static void main(String[] args) {
SwingUtilities. invokeLater (() -> {
createAndShowGUI();
3);
private static void createAndShowGUI() {
JFrame frame = new Frame("Book Library");
frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
// Create components
JButton addButton = new JButton ("Add");
Button deleteButton = new JButton ("Delete");
JButton clearButton = new JButton ("Clear");
TextField titleField = new TextField(20);
JTextField isbnField = new JTextField(20);
TextArea descriptionArea = new TextArea (5, 20);
BookTableModel btm = new BookTableModel();
Table bookTable = new Table(btm);
bookTable.setPreferredSize(new Dimension(400, 400));
// Add components to the frame
JPanel panel = new JPanel (new FlowLayout());
panel. add (new JLabel("Title:"));
panel.add (titleField);
panel.add (new JLabel ("ISBN:"));
panel.add isbnField);
panel. add (new JLabel("Description:")); panel.add (descriptionArea);
panel. add (addButton); panel. add (deleteButton); panel.add (clearButton);
frame. add (panel, BorderLayout.NORTH);
frame. add (new JScrollPane(bookTable), BorderLayout. CENTER);
// Add action listeners
addButton. addActionListener (e -> {
String title = titleField.getText();
if (!title.isEmpty() && lisbn.isEmpty() && !description.isEmpty()) {
String[] bookData = {"1", title, isbn, description};
btm.addData (bookData);
btm. fireTableDataChanged ();
} else {
JOptionPane.showMessageDialog(frame, "Fill in all fields before
}
});
deleteButton.addActionListener(e -> {
int selectedRow = bookTable.getSelectedRow();
if (selectedRow â€º= 0) {
btm.removeRow(selectedRow);
btm.fireTableDataChanged ();
} else {
JOptionPane. showMessageDialog(frame, "Select a row to delete.");
}) ;
frame.pack();
frame.setVisible(true);
class BookTableModel extends AbstractTableModel {
private final String!] columNames = {"ID",
"Title", "ISBN", "Description"};
private final ArrayList<String[]> data = new ArrayList<>();
public void addData(String[] bookData) {
data.add (bookData);
public void removeRow(int row) {
data. remove(row);
@Override
public int getRowCount() {
return data.size();
@override
public int getColumnCount () {
return columnNames. length;
@Override
public Object getValueAt(int row, int col) {
return data.get (row) [col];
@Override
string isbn = isbnField.getText();
String description = descriptionArea.getText();
